import { app, BrowserWindow } from 'electron';
import { ElectronBlocker } from '@ghostery/adblocker-electron';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
async function createWindow() {
	const mainWindow = new BrowserWindow({
		fullscreen: true,
		autoHideMenuBar: true,
		webPreferences: {
			nodeIntegration: false,
			contextIsolation: true,
		},
	});

	const blocker = await ElectronBlocker.fromPrebuiltAdsAndTracking(fetch);
	blocker.enableBlockingInSession(mainWindow.webContents.session);

	// pressing alt can bring up the menu bar even when its hidden. This accounts for that and disables it entirely
	mainWindow.setMenu(null);

	const url = 'https://youtube.com/tv';

	mainWindow.loadURL(url, {
		userAgent:
			'Mozilla/5.0 (PlayStation; PlayStation 5/6.02) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.4 Safari/605.1.15',
	});

	// setting zoom 50% to enable higher resolutions. has no effect on the applications UI.
	mainWindow.webContents.on('did-finish-load', () => {
		mainWindow.webContents.setZoomFactor(0.5);
	});
}

app.whenReady().then(createWindow);

app.on('window-all-closed', () => {
	if (process.platform !== 'darwin') {
		app.quit();
	}
});

app.on('activate', () => {
	if (BrowserWindow.getAllWindows().length === 0) {
		createWindow();
	}
});
